input {
  beats {
    port => 5044
    host => "localhost"
  }
}

filter {
  if [event][module] != "apache" {
    # safeguard drop anything different than apache log
    drop { }
  }

  # only handle apache access logs
  if [event][dataset] == "apache.access" {
    grok {
      match => {
        "message" => [
          '%{IPORHOST:[source][address]} - %{DATA:[user][name]} \[%{HTTPDATE:[apache][access][time]}\] "(?:%{WORD:[http][request][method]} %{DATA:[url][original]} HTTP/%{NUMBER:[http][version]}|-)?" %{NUMBER:[http][response][status_code]:long} (?:%{NUMBER:[http][response][body][bytes]:long}|-)("%{DATA:[http][request][referrer]}")?( "%{DATA:[user_agent][original]}")?'
        ]
      }

      remove_field => "message"
    }

    if "_grokparsefailure" in [tags] {
      ####drop{}
    }

    grok {
      match => {
        "[source][address]" => "^(%{IP:[source][ip]}|%{HOSTNAME:[source][domain]})$"
      }
    }

    mutate {
      add_field => { "[event][created]" => "%{@timestamp}" }
    }

    date {
      match => ["[apache][access][time]", "dd/MMM/yyyy:H:m:s Z"]
      remove_field => ["[apache][access][time]","[host]"]
    }
  } else if [event][dataset] == "apache.error"{
    grok {
      match => {
        "message" => [
          "\[%{APACHE_TIME:[apache][error][timestamp]}\] \[%{LOGLEVEL:[log][level]}\]( \[client %{IPORHOST:[source][address]}(:%{POSINT:[source][port]})?\])? %{GREEDYDATA:[message]}",

          "\[%{APACHE_TIME:[apache][error][timestamp]}\] \[%{DATA:[apache][error][module]}:%{LOGLEVEL:[log][level]}\] \[pid %{NUMBER:[process][pid]:long}(:tid %{NUMBER:[process][thread][id]:long})?\](\[client %{IPORHOST:[source][address]}(:%{POSINT:[source][port]})?\])? %{GREEDYDATA:[message]}"
        ]
      }

      pattern_definitions => {
        "APACHE_TIME" => "%{DAY} %{MONTH} %{MONTHDAY} %{TIME} %{YEAR}"
      }
    }

    date {
      match => ["[apache][error][timestamp]", "EEE MMM dd H:m:s yyyy", "EEE MMM dd H:m:s.SSSSSS yyyy"]
      remove_field => "[apache][error][timestamp]"
    }

    grok {
      match => {
        "[source][address]" => "^(%{IP:[source][ip]}|%{HOSTNAME:[source][domain]})$"
      }
    }
  }
}

output {
  elasticsearch {
     hosts => ["http://localhost:9200"]
     manage_template => false
     #index => "${[@metadata][beat]}-%{[@metadata][version]}-%{+YYYY-MM-dd}"
     # Below is a workaroud for lostash issue:
     index => "filebeat-%{[@metadata][version]}-%{+YYYY-MM-dd}"
  }
  stdout{
    codec => rubydebug {
      metadata => true
    }
  }
}

